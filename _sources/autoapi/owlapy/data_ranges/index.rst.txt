:py:mod:`owlapy.data_ranges`
============================

.. py:module:: owlapy.data_ranges

.. autoapi-nested-parse::

   https://www.w3.org/TR/owl2-syntax/#Data_Ranges

   DataRange := Datatype | DataIntersectionOf | DataUnionOf | DataComplementOf | DataOneOf | DatatypeRestriction



Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   owlapy.data_ranges.OWLObject
   owlapy.data_ranges.OWLEntity
   owlapy.data_ranges.HasOperands
   owlapy.data_ranges.IRI
   owlapy.data_ranges.OWLPropertyRange
   owlapy.data_ranges.OWLDataRange
   owlapy.data_ranges.OWLDataComplementOf
   owlapy.data_ranges.OWLNaryDataRange
   owlapy.data_ranges.OWLDataUnionOf
   owlapy.data_ranges.OWLDataIntersectionOf




.. py:class:: OWLObject


   Base interface for OWL objects

   .. py:attribute:: __slots__
      :value: ()

      

   .. py:method:: __eq__(other)
      :abstractmethod:

      Return self==value.


   .. py:method:: __hash__()
      :abstractmethod:

      Return hash(self).


   .. py:method:: __repr__()
      :abstractmethod:

      Return repr(self).


   .. py:method:: is_anonymous() -> bool



.. py:class:: OWLEntity


   Bases: :py:obj:`OWLNamedObject`

   Represents Entities in the OWL 2 Specification.

   .. py:attribute:: __slots__
      :value: ()

      

   .. py:method:: to_string_id() -> str


   .. py:method:: is_anonymous() -> bool



.. py:class:: HasOperands


   Bases: :py:obj:`Generic`\ [\ :py:obj:`_T`\ ]

   An interface to objects that have a collection of operands.

   :param _T: Operand type.

   .. py:attribute:: __slots__
      :value: ()

      

   .. py:method:: operands() -> Iterable[_T]
      :abstractmethod:

      Gets the operands - e.g., the individuals in a sameAs axiom, or the classes in an equivalent
      classes axiom.

      :returns: The operands.



.. py:class:: IRI(namespace: Union[str, owlapy.namespaces.Namespaces], remainder: str)


   Bases: :py:obj:`owlapy.owl_annotation.OWLAnnotationSubject`, :py:obj:`owlapy.owl_annotation.OWLAnnotationValue`

   An IRI, consisting of a namespace and a remainder.

   .. py:property:: str
      :type: str

      Returns:
      The string that specifies the IRI.

   .. py:property:: reminder
      :type: str

      Returns:
      The string corresponding to the reminder of the IRI.

   .. py:attribute:: __slots__
      :value: ('_namespace', '_remainder', '__weakref__')

      

   .. py:attribute:: type_index
      :type: Final
      :value: 0

      

   .. py:method:: create(namespace: owlapy.namespaces.Namespaces, remainder: str) -> IRI
                  create(namespace: str, remainder: str) -> IRI
                  create(string: str) -> IRI
      :staticmethod:


   .. py:method:: __repr__()

      Return repr(self).


   .. py:method:: __eq__(other)

      Return self==value.


   .. py:method:: __hash__()

      Return hash(self).


   .. py:method:: is_nothing()

      Determines if this IRI is equal to the IRI that owl:Nothing is named with.

      :returns: True if this IRI is equal to <http://www.w3.org/2002/07/owl#Nothing> and otherwise False.


   .. py:method:: is_thing()

      Determines if this IRI is equal to the IRI that owl:Thing is named with.

      :returns: True if this IRI is equal to <http://www.w3.org/2002/07/owl#Thing> and otherwise False.


   .. py:method:: is_reserved_vocabulary() -> bool

      Determines if this IRI is in the reserved vocabulary. An IRI is in the reserved vocabulary if it starts with
      <http://www.w3.org/1999/02/22-rdf-syntax-ns#> or <http://www.w3.org/2000/01/rdf-schema#> or
      <http://www.w3.org/2001/XMLSchema#> or <http://www.w3.org/2002/07/owl#>.

      :returns: True if the IRI is in the reserved vocabulary, otherwise False.


   .. py:method:: as_iri() -> IRI

      :returns: if the value is an IRI, return it. Return Mone otherwise.


   .. py:method:: as_str() -> str

      CD: Should be deprecated.
      :returns: The string that specifies the IRI.


   .. py:method:: get_short_form() -> str

      Gets the short form.

      :returns: A string that represents the short form.


   .. py:method:: get_namespace() -> str

      :returns: The namespace as string.


   .. py:method:: get_remainder() -> str

      :returns: The remainder (coincident with NCName usually) for this IRI.



.. py:class:: OWLPropertyRange


   Bases: :py:obj:`owlapy.owlobject.OWLObject`

   OWL Objects that can be the ranges of properties.


.. py:class:: OWLDataRange


   Bases: :py:obj:`OWLPropertyRange`

   Represents a DataRange in the OWL 2 Specification.


.. py:class:: OWLDataComplementOf(data_range: OWLDataRange)


   Bases: :py:obj:`OWLDataRange`

   Represents DataComplementOf in the OWL 2 Specification.

   .. py:attribute:: type_index
      :type: Final
      :value: 4002

      

   .. py:method:: get_data_range() -> OWLDataRange

      :returns: The wrapped data range.


   .. py:method:: __repr__()

      Return repr(self).


   .. py:method:: __eq__(other)

      Return self==value.


   .. py:method:: __hash__()

      Return hash(self).



.. py:class:: OWLNaryDataRange(operands: Iterable[OWLDataRange])


   Bases: :py:obj:`OWLDataRange`, :py:obj:`owlapy.meta_classes.HasOperands`\ [\ :py:obj:`OWLDataRange`\ ]

   OWLNaryDataRange.

   .. py:attribute:: __slots__
      :value: ()

      

   .. py:method:: operands() -> Iterable[OWLDataRange]

      Gets the operands - e.g., the individuals in a sameAs axiom, or the classes in an equivalent
      classes axiom.

      :returns: The operands.


   .. py:method:: __repr__()

      Return repr(self).


   .. py:method:: __eq__(other)

      Return self==value.


   .. py:method:: __hash__()

      Return hash(self).



.. py:class:: OWLDataUnionOf(operands: Iterable[OWLDataRange])


   Bases: :py:obj:`OWLNaryDataRange`

   Represents a DataUnionOf data range in the OWL 2 Specification.

   .. py:attribute:: __slots__
      :value: '_operands'

      

   .. py:attribute:: type_index
      :type: Final
      :value: 4005

      


.. py:class:: OWLDataIntersectionOf(operands: Iterable[OWLDataRange])


   Bases: :py:obj:`OWLNaryDataRange`

   Represents DataIntersectionOf  in the OWL 2 Specification.

   .. py:attribute:: __slots__
      :value: '_operands'

      

   .. py:attribute:: type_index
      :type: Final
      :value: 4004

      


