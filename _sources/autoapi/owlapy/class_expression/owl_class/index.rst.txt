owlapy.class_expression.owl_class
=================================

.. py:module:: owlapy.class_expression.owl_class

.. autoapi-nested-parse::

   OWL Class



Classes
-------

.. autoapisummary::

   owlapy.class_expression.owl_class.OWLClassExpression
   owlapy.class_expression.owl_class.OWLObjectComplementOf
   owlapy.class_expression.owl_class.OWLEntity
   owlapy.class_expression.owl_class.IRI
   owlapy.class_expression.owl_class.OWLClass


Module Contents
---------------

.. py:class:: OWLClassExpression

   Bases: :py:obj:`owlapy.owl_data_ranges.OWLPropertyRange`


   OWL Class expressions represent sets of individuals by formally specifying conditions on the individuals' properties;
   individuals satisfying these conditions are said to be instances of the respective class expressions.
   In the structural specification of OWL 2, class expressions are represented by ClassExpression.
   (https://www.w3.org/TR/owl2-syntax/#Class_Expressions)


   .. py:attribute:: __slots__
      :value: ()



   .. py:method:: is_owl_thing() -> bool
      :abstractmethod:


      Determines if this expression is the built in class owl:Thing. This method does not determine if the class
      is equivalent to owl:Thing.

      :returns: Thing.
      :rtype: True if this expression is owl



   .. py:method:: is_owl_nothing() -> bool
      :abstractmethod:


      Determines if this expression is the built in class owl:Nothing. This method does not determine if the class
      is equivalent to owl:Nothing.



   .. py:method:: get_object_complement_of() -> OWLObjectComplementOf
      :abstractmethod:


      Gets the object complement of this class expression.

      :returns: A class expression that is the complement of this class expression.



   .. py:method:: get_nnf() -> OWLClassExpression
      :abstractmethod:


      Gets the negation normal form of the complement of this expression.

      :returns: A expression that represents the NNF of the complement of this expression.



.. py:class:: OWLObjectComplementOf(op: OWLClassExpression)

   Bases: :py:obj:`OWLBooleanClassExpression`, :py:obj:`owlapy.meta_classes.HasOperands`\ [\ :py:obj:`OWLClassExpression`\ ]


   Represents an ObjectComplementOf class expression in the OWL 2 Specification.


   .. py:attribute:: __slots__
      :value: '_operand'



   .. py:attribute:: type_index
      :type:  Final
      :value: 3003



   .. py:method:: get_operand() -> OWLClassExpression

      :returns: The wrapped expression.



   .. py:method:: operands() -> Iterable[OWLClassExpression]

      Gets the operands - e.g., the individuals in a sameAs axiom, or the classes in an equivalent
      classes axiom.

      :returns: The operands.



   .. py:method:: __repr__()

      Return repr(self).



   .. py:method:: __eq__(other)

      Return self==value.



   .. py:method:: __hash__()

      Return hash(self).



.. py:class:: OWLEntity

   Bases: :py:obj:`OWLNamedObject`


   Represents Entities in the OWL 2 Specification.


   .. py:attribute:: __slots__
      :value: ()



   .. py:method:: to_string_id() -> str


   .. py:method:: is_anonymous() -> bool


.. py:class:: IRI(namespace: Union[str, owlapy.namespaces.Namespaces], remainder: str)

   Bases: :py:obj:`owlapy.owl_annotation.OWLAnnotationSubject`, :py:obj:`owlapy.owl_annotation.OWLAnnotationValue`


   An IRI, consisting of a namespace and a remainder.


   .. py:attribute:: __slots__
      :value: ('_namespace', '_remainder', '__weakref__')



   .. py:attribute:: type_index
      :type:  Final
      :value: 0



   .. py:method:: create(namespace: owlapy.namespaces.Namespaces, remainder: str) -> IRI
                  create(namespace: str, remainder: str) -> IRI
                  create(string: str) -> IRI
      :staticmethod:



   .. py:method:: __repr__()

      Return repr(self).



   .. py:method:: __eq__(other)

      Return self==value.



   .. py:method:: __hash__()

      Return hash(self).



   .. py:method:: is_nothing()

      Determines if this IRI is equal to the IRI that owl:Nothing is named with.

      :returns: True if this IRI is equal to <http://www.w3.org/2002/07/owl#Nothing> and otherwise False.



   .. py:method:: is_thing()

      Determines if this IRI is equal to the IRI that owl:Thing is named with.

      :returns: True if this IRI is equal to <http://www.w3.org/2002/07/owl#Thing> and otherwise False.



   .. py:method:: is_reserved_vocabulary() -> bool

      Determines if this IRI is in the reserved vocabulary. An IRI is in the reserved vocabulary if it starts with
      <http://www.w3.org/1999/02/22-rdf-syntax-ns#> or <http://www.w3.org/2000/01/rdf-schema#> or
      <http://www.w3.org/2001/XMLSchema#> or <http://www.w3.org/2002/07/owl#>.

      :returns: True if the IRI is in the reserved vocabulary, otherwise False.



   .. py:method:: as_iri() -> IRI

      :returns: if the value is an IRI, return it. Return Mone otherwise.



   .. py:method:: as_str() -> str

      CD: Should be deprecated.
      :returns: The string that specifies the IRI.



   .. py:property:: str
      :type: str

      Returns:
      The string that specifies the IRI.


   .. py:property:: reminder
      :type: str

      Returns:
      The string corresponding to the reminder of the IRI.


   .. py:method:: get_short_form() -> str

      Gets the short form.

      :returns: A string that represents the short form.



   .. py:method:: get_namespace() -> str

      :returns: The namespace as string.



   .. py:method:: get_remainder() -> str

      :returns: The remainder (coincident with NCName usually) for this IRI.



.. py:class:: OWLClass(iri: Union[owlapy.iri.IRI, str])

   Bases: :py:obj:`owlapy.class_expression.class_expression.OWLClassExpression`, :py:obj:`owlapy.owl_object.OWLEntity`


   An OWL 2 named Class. Classes can be understood as sets of individuals.
   (https://www.w3.org/TR/owl2-syntax/#Classes)


   .. py:attribute:: __slots__
      :value: ('_iri', '_is_nothing', '_is_thing')



   .. py:attribute:: type_index
      :type:  Final
      :value: 1001



   .. py:property:: iri
      :type: owlapy.iri.IRI

      Gets the IRI of this object.

      :returns: The IRI of this object.


   .. py:property:: str
      Gets the string representation of this object

      :returns: The IRI as string


   .. py:property:: reminder
      :type: str

      The reminder of the IRI


   .. py:method:: is_owl_thing() -> bool

      Determines if this expression is the built in class owl:Thing. This method does not determine if the class
      is equivalent to owl:Thing.

      :returns: Thing.
      :rtype: True if this expression is owl



   .. py:method:: is_owl_nothing() -> bool

      Determines if this expression is the built in class owl:Nothing. This method does not determine if the class
      is equivalent to owl:Nothing.



   .. py:method:: get_object_complement_of() -> owlapy.class_expression.class_expression.OWLObjectComplementOf

      Gets the object complement of this class expression.

      :returns: A class expression that is the complement of this class expression.



   .. py:method:: get_nnf() -> OWLClass

      Gets the negation normal form of the complement of this expression.

      :returns: A expression that represents the NNF of the complement of this expression.



