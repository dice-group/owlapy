:py:mod:`owlapy.model.providers`
================================

.. py:module:: owlapy.model.providers

.. autoapi-nested-parse::

   OWL Datatype restriction constructors.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   owlapy.model.providers.OWLDatatypeMaxExclusiveRestriction
   owlapy.model.providers.OWLDatatypeMinExclusiveRestriction
   owlapy.model.providers.OWLDatatypeMaxInclusiveRestriction
   owlapy.model.providers.OWLDatatypeMinInclusiveRestriction
   owlapy.model.providers.OWLDatatypeMinMaxExclusiveRestriction
   owlapy.model.providers.OWLDatatypeMinMaxInclusiveRestriction



Attributes
~~~~~~~~~~

.. autoapisummary::

   owlapy.model.providers.Restriction_Literals


.. py:data:: Restriction_Literals

   

.. py:function:: OWLDatatypeMaxExclusiveRestriction(max_: Restriction_Literals) -> owlapy.model.OWLDatatypeRestriction

   Create a max exclusive restriction.


.. py:function:: OWLDatatypeMinExclusiveRestriction(min_: Restriction_Literals) -> owlapy.model.OWLDatatypeRestriction

   Create a min exclusive restriction.


.. py:function:: OWLDatatypeMaxInclusiveRestriction(max_: Restriction_Literals) -> owlapy.model.OWLDatatypeRestriction

   Create a max inclusive restriction.


.. py:function:: OWLDatatypeMinInclusiveRestriction(min_: Restriction_Literals) -> owlapy.model.OWLDatatypeRestriction

   Create a min inclusive restriction.


.. py:function:: OWLDatatypeMinMaxExclusiveRestriction(min_: Restriction_Literals, max_: Restriction_Literals) -> owlapy.model.OWLDatatypeRestriction

   Create a min-max exclusive restriction.


.. py:function:: OWLDatatypeMinMaxInclusiveRestriction(min_: Restriction_Literals, max_: Restriction_Literals) -> owlapy.model.OWLDatatypeRestriction

   Create a min-max inclusive restriction.


